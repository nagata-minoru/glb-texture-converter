import*as fs from"node:fs/promises";import sharp from"sharp";import{GLTF}from"https://code4fukui.github.io/GLTF/GLTF.js";import{GLB}from"https://code4fukui.github.io/GLTF/GLB.js";const resizeImage=async(img,width)=>{const img2=await sharp(img).resize(width).toBuffer();return img2};const getImageMetadata=async img=>{const metadata=await sharp(img).metadata();return{width:metadata.width||0,height:metadata.height||0}};export const processFile=async(filePath,scaleRatio)=>{const bin=new Uint8Array(await fs.readFile(filePath));const gltfmode=filePath.endsWith(".gltf");const gltf=gltfmode?GLTF.parse(bin):await GLB.decode(bin);const img=GLTF.getTexture(gltf);const{width:width}=await getImageMetadata(img);const img2=await resizeImage(img,width*scaleRatio);GLTF.setTexture(gltf,img2);const data=gltfmode?GLTF.stringify(gltf):await GLB.encode(gltf);return data};export const saveFile=async(filePath,data)=>{try{await fs.writeFile(filePath,data);console.log(`File saved to ${filePath}`)}catch(error){console.error("Error saving file:",error)}};